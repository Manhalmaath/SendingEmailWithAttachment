import json
import sys
import os
import reports
import emails


def load_data(filename):
    """Loads the contents of filename as a JSON file."""
    with open(filename) as json_file:
        data = json.load(json_file)
    return data


def format_car(car):
    """Given a car dictionary, returns a nicely formatted name."""
    return "{} {} ({})".format(
        car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
    """Analyzes the data, looking for maximums.

    Returns a list of lines that summarize the information.
    """
    max_revenue = {"revenue": 0}
    max_sales = {"total_sales": 0,
                 "car": {"car_year": 0, "car_make": "", "car_model": ""}}
    popular_year = {}
    for item in data:
        # Calculate the revenue generated by this model (price * total_sales)
        # We need to convert the price from "$1234.56" to 1234.56
        item_price = float(item["price"].strip("$"))
        item_revenue = item["total_sales"] * item_price
        if item_revenue > max_revenue["revenue"]:
            item["revenue"] = item_revenue
            max_revenue = item

        if max_sales["total_sales"] < item["total_sales"]:
            max_sales["total_sales"] = item["total_sales"]
            max_sales["car"] = item["car"]


        if item["car"]["car_year"] not in popular_year:
            popular_year[item["car"]["car_year"]] = [1, item["total_sales"]]
        else:
            popular_year[item["car"]["car_year"]][0] += 1
            popular_year[item["car"]["car_year"]][1] += item["total_sales"]
    the_most_popular_year = max(popular_year, key=lambda x: popular_year[x][1])
    summary = [f"The {format_car(max_revenue['car'])} generated the most revenue: ${max_revenue['revenue']}",
               f"The {format_car(max_sales['car'])} had the most sales: {max_sales['total_sales']}",
               f"The most popular year was {the_most_popular_year} with {popular_year[the_most_popular_year][1]} sales."]
    return summary


def cars_dict_to_table(car_data):
    """Turns the data in car_data into a list of lists."""
    table_data = [["ID", "Car", "Price", "Total Sales"]]
    for item in car_data:
        table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])

    return table_data


def main(argv):
    """Process the JSON data and generate a full report out of it."""
    data = load_data("car_sales.json")
    summary = process_data(data)
    print(summary)

    if os.path.join("tmp") not in os.listdir():
        os.mkdir("tmp")
    reports.generate(os.path.join("tmp", "cars.pdf"), 'Sales summary for last month', "<br/>".join(summary),
                     cars_dict_to_table(data))
    emails.send(
        emails.generate("automation@example.com", "student-01-ca830f55884d@example.com", "Sales summary for last month",
                        "\n".join(summary), os.path.join("tmp", "cars.pdf")))


if __name__ == "__main__":
    main(sys.argv)
